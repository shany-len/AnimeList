{"version":3,"sources":["IMG/logo.png","componentes/header.js","componentes/animeItem.js","componentes/animeGrid.js","IMG/loading.gif","componentes/search.js","App.js","reportWebVitals.js","index.js"],"names":["Cabecera","className","src","logo","alt","React","Component","Modal","setAppElement","AnimeItems","item","useState","modalIsOpen","setModalIsOpen","sinopsis","setSinopsis","airing","setAring","value","setValue","b","synopsis","slice","url","title","replace","useEffect","res","Math","round","score","image_url","onClick","isOpen","shouldCloseOnEsc","shouldCloseOnOverlayClick","Box","component","mb","borderColor","Typography","Rating","name","precision","emptyIcon","fontSize","readOnly","type","episodes","rated","href","AnimeGrid","items","isLoading","map","mal_id","Search","getQuery","text","setText","placeholder","onChange","e","q","target","onKeyPress","charCode","keyPress","autoFocus","App","setItems","setIsLoading","query","setQuery","a","axios","result","data","results","fetchItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47807403.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7ce16813.png\";","import React from 'react';\r\nimport logo from '../IMG/logo.png';\r\n\r\n\r\n\r\nclass Cabecera extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className='center'>\r\n                <img src={logo} alt='logo'></img>\r\n                <div className='tit'>\r\n                    <p>AniList</p>\r\n                    <p>Your anime Wiki</p>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cabecera;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorderRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport '../../node_modules/bootstrap/dist/js/bootstrap.bundle';\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst AnimeItems = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [sinopsis, setSinopsis] = useState();\r\n    const [airing, setAring] = useState();\r\n    const [value, setValue] = useState();\r\n\r\n    const synopsis = item.synopsis;\r\n    const b = synopsis.slice(0, 95) + \"...\";\r\n    const a = item.title.replace(\" \", \"-\");\r\n    const url = \"https://www.crunchyroll.com/es/\" + a;\r\n\r\n    useEffect(() => {\r\n        setSinopsis(b);\r\n        if (item.airing) {\r\n            setAring(\"Currently Airing\");\r\n        }\r\n        else {\r\n            setAring(\"Finished Airing\");\r\n        }\r\n        const res = Math.round(item.score) / 2;\r\n        setValue(res)\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flip-card\">\r\n                <div className=\"flip-card-inner\">\r\n                    <div className=\"flip-card-front\">\r\n                        <img src={item.image_url} alt={item.title} />\r\n                    </div>\r\n                    <div className=\"flip-card-back\">\r\n                        <h1>{item.title}</h1>\r\n                        <ul>\r\n                            <li>\r\n                                <strong>Synopsis:</strong> {sinopsis}\r\n                            </li>\r\n                            <li>\r\n                                <button className='btn btn-info' onClick={() => setModalIsOpen(true)}>See More...</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className=\"modalT\"\r\n            >\r\n                <div className=\"modalC mt-3\">\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h1 className=\"h1T\">{item.title}</h1>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-4\">\r\n                                <div className=\"row center\">\r\n                                    <img className=\"imgPromo\" src={item.image_url} alt={item.title}></img>\r\n                                </div>\r\n                                <div className=\"row center mt-3\">\r\n                                    <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                        <Typography component=\"legend\">Score:</Typography>\r\n                                        <Rating name=\"read-only\" value={value} precision={0.5} emptyIcon={<StarBorderIcon fontSize=\"inherit\" />} readOnly />\r\n                                    </Box>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"col-sm-6 descrip\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <strong>Synopsis</strong> {item.synopsis}\r\n                                    </li>\r\n                                    <li>\r\n                                        <strong>Type:</strong> {item.type}\r\n                                    </li>\r\n                                    <li>\r\n                                        <strong>Episodes:</strong> {item.episodes}\r\n                                    </li>\r\n                                    <li>\r\n                                        <strong>Airing:</strong> {airing}\r\n                                    </li>\r\n                                    <li>\r\n                                        <strong>Rated:</strong> {item.rated}\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n                <footer className=\"footer\">\r\n                    <a className='btn btn-info ' href={url}>Start Anime</a>\r\n                </footer>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default AnimeItems;\r\n\r\n/*\r\nfunction Example() {\r\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\r\n\r\n  const handleClose = () => setmodalIsOpen(false);\r\n  const handlemodalIsOpen = () => setmodalIsOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handlemodalIsOpen}>\r\n        Launch demo modal\r\n      </Button>\r\n\r\n      <Modal modalIsOpen={modalIsOpen} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n*/","import React from 'react';\r\nimport AnimeItems from './animeItem';\r\nimport load from '../IMG/loading.gif'\r\n\r\nconst AnimeGrid = ({items, isLoading})=>{\r\n    if (isLoading) {\r\n        return (\r\n            <div>     \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"cards\">\r\n                {items.map(items=>(\r\n                    <AnimeItems key={items.mal_id} item={items}></AnimeItems>\r\n                ))}\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnimeGrid;\r\n","export default __webpack_public_path__ + \"static/media/loading.7932c498.gif\";","import React, {useState} from 'react';\r\n\r\nconst Search=({ getQuery })=>{\r\n    const [text, setText] = useState('');\r\n\r\n    const onChange = (q) =>{\r\n        setText(q);\r\n        \r\n    }\r\n    const handleChange=(text)=>{\r\n        getQuery(text);\r\n        setText('');\r\n    }\r\n    const keyPress = (q, text) => {\r\n        if (q.charCode === 13) {\r\n            getQuery(text);\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='input-group search'>\r\n\r\n        <input type='text' className='form-control ' placeholder='Buscar'\r\n            value={text}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            onKeyPress={(e) => keyPress(e, text)} autoFocus></input>\r\n    </div>\r\n        \r\n    )\r\n}\r\nexport default Search;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cabecera from './componentes/header'\nimport AnimeGrid from './componentes/animeGrid'\nimport Search from './componentes/search';\n\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('naruto');\n\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      try{\n      const result = await axios(\n        `https://api.jikan.moe/v3/search/anime?q=${query}`\n        );\n\n      //console.log(result.data.results);\n      setItems(result.data.results);\n      setIsLoading(false);\n    }catch(error){\n\n    }}\n    fetchItems();\n  }, [query]);\n\n\n\n  return (\n    <div className=\"container\">\n      <Cabecera />\n      <Search getQuery={(q) => setQuery(q)} />\n      <AnimeGrid isLoading={isLoading} items={items}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}